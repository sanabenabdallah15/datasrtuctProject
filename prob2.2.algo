Function dot_product(INTEGER V1[], INTEGER V2[]): INTEGER;
Var
    ps: INTEGER;
    i: INTEGER;

Begin
    ps := 0; // Initialize the dot product to zero
    For i from 1 to Length(v1) Do
        ps := ps + v1[i] * v2[i]; // Calculate the dot product
    End For;
    Return ps; // Return the dot product as a result
End;

Algorithm DetermineOrthogonality(INTEGER vectors [] ): BOOLEAN;
Var
    i, j: INTEGER;
    dot_result: INTEGER;
Begin
    For i from 1 to Length(vectors) - 1 Do
        For j from i + 1 to Length(vectors) Do
            dot_result := dot_product(vectors[i], vectors[j]); // Calculate dot product
            If dot_result <> 0 Then
                Return False; // Not orthogonal if dot product is not zero
            End If;
        End For;
    End For;
    Return True; // All pairs are orthogonal
End;
